# Build Stage Dockerfile

# syntax=docker/dockerfile:1
###############################################################################
# Author: Manish Sharma <manish.sharma@amagi.com>
#
###############################################################################

FROM debian:12.8 AS builder

# Specify labels
LABEL author=manish.sharma@amagi.com
LABEL maintainer=manish.sharma@amagi.com

ENV DEBIAN_FRONTEND="noninteractive" 
ENV TZ="UTC"
ENV INITRD No

WORKDIR /home/root/installation

# Copy the repository to build
COPY ["workspace.tgz",\
      "/home/root/installation/"]

# Download other dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    cmake \
    build-essential \
    python3 \
    python3-pip \
    python3-setuptools \
    python3-distro \
    pipx \
    git \
    texinfo \
    wget

# Install network analysis tools
RUN apt-get update && apt-get install -y --no-install-recommends \
    tcpdump \
    net-tools \
    dnsutils

# Build Janus
RUN mkdir -p webrtc_build \
    && tar -zxvf workspace.tgz -C webrtc_build \
    && cd webrtc_build/webrtc_server/janus/build/ && ./build_janus.sh \
    && cd /home/root/installation/webrtc_build/webrtc_server/janus/build/ && ./copy_janus_libs.sh

# Install application related python dependencies
RUN pip3 install --no-cache-dir -r webrtc_build/requirements.txt -t ./packages/

# Cleanup workspace
RUN cd /home/root/installation/ \
    && rm *.tgz

# Release Stage Dockerfile

FROM public.ecr.aws/amagi-media-labs-sec/secure-container-base/python-dev:3.13.5

ARG WORKDIR=/home/root/installation
WORKDIR $WORKDIR

COPY --from=builder /opt/janus /opt/janus/
COPY --from=builder /home/root/installation/webrtc_build/webrtc_server/ $WORKDIR/webrtc_server
# TODO
# COPY --from=builder /home/root/installation/webrtc_build/config_discovery/ $WORKDIR/config_discovery
COPY --from=builder /home/root/installation/webrtc_build/docker/entrypoint.py $WORKDIR/entrypoint.py
COPY --from=builder $WORKDIR/packages/ $WORKDIR/
COPY --from=builder /tmp/janus/* /lib/x86_64-linux-gnu/

# Set PYTHONPATH to include the packages directory
ENV PYTHONPATH $WORKDIR

ENTRYPOINT ["sleep","infinity"]
# ENTRYPOINT ["python3","/home/root/installation/entrypoint.py"]
