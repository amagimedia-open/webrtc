# Build Stage Dockerfile

# syntax=docker/dockerfile:1
###############################################################################
# Author: Manish Sharma <manish.sharma@amagi.com>
#
###############################################################################

FROM debian:12.8 AS builder

# Specify labels
LABEL author=manish.sharma@amagi.com
LABEL maintainer=manish.sharma@amagi.com

ENV DEBIAN_FRONTEND="noninteractive" 
ENV TZ="UTC"
ENV INITRD No

WORKDIR /home/root/installation

# Download other dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    cmake \
    build-essential \
    python3 \
    python3-pip \
    python3-setuptools \
    python3-distro \
    pipx \
    git \
    texinfo \
    wget \
    vim \
    automake

### Install Janus related dependencies ###
RUN apt-get update && apt-get install -y \
    libmicrohttpd-dev \
    libjansson-dev \
    libglib2.0-dev \
    libevent-dev \
    libtool \
    gengetopt \
    libssl-dev \
    openssl \
    libconfig-dev \
    gtk-doc-tools \
    libcurl4-openssl-dev

### Build libnice ###
RUN export PATH=$PATH:/root/.local/bin \
    && pipx install ninja \
    && pipx install meson \
    && wget --no-check-certificate https://libnice.freedesktop.org/releases/libnice-0.1.19.tar.gz \
    && tar xvf libnice-0.1.19.tar.gz \
    && cd libnice-0.1.19 \
    && meson --prefix=/opt build \
    && ninja -C build \
    && ninja -C build install \
    && cd /home/root/installation \
    && rm -rf libnice-0.1.19*

### Build libwebsockets ###
RUN git clone https://github.com/amagimedia-open/libwebsockets.git \
    && cd libwebsockets \
    && git checkout gy-increase_max_http_header_data \
    && mkdir build \
    && cd build \
    && cmake -DLWS_MAX_SMP=1 -DLWS_WITHOUT_TESTAPPS=ON -DCMAKE_INSTALL_PREFIX:PATH=/opt -DCMAKE_C_FLAGS="-fpic" .. \
    && make \
    && make install \
    && cd /home/root/installation \
    && rm -rf libwebsockets*

### Build libsrtp ###
RUN git clone https://github.com/cisco/libsrtp.git \
    && cd libsrtp \
    && git checkout v2.2.0 \
    && ./configure --prefix=/opt --enable-openssl \
    && make shared_library \
    && make install \
    && cd /home/root/installation \
    && rm -rf libsrtp*

ENV PKG_CONFIG_PATH=/opt/lib/x86_64-linux-gnu/pkgconfig/:/opt/lib/pkgconfig/
    LD_LIBRARY_PATH=/opt/lib/:/opt/lib/x86_64-linux-gnu/

### Build janus gateway ###
RUN git clone https://github.com/meetecho/janus-gateway.git \
    && cd janus-gateway \
    && git checkout v0.12.0 \
    # Issue Janus, debug memory
    # https://github.com/meetecho/janus-gateway/issues/1808
    # && sed -i 's|//~ #define REFCOUNT_DEBUG|#define REFCOUNT_DEBUG|g' refcount.h \
    && ./autogen.sh \
    # Enable code dump janus
    # && export CFLAGS="-fsanitize=address -fno-omit-frame-pointer" \
    # && export LDFLAGS="-lasan" \
    && ./configure --prefix=/opt/janus --disable-rabbitmq --disable-mqtt \
    && make \
    && make install \
    && make configs \
    && cd /home/root/installation \
    && rm -rf janus-gateway*

# Copy janus libs to /opt/
COPY ["docker/copy_janus_libs.sh", "/home/root/installation/"]
RUN bash copy_janus_libs.sh

# Cleanup workspace
RUN apt-get clean \
    && apt-get autoclean \
    && apt-get autoremove -y

ENTRYPOINT ["sleep", "infinity"]

# Release Stage Dockerfile
# FROM debian:12.8-slim

# WORKDIR /home/root/installation/

# ENV PKG_CONFIG_PATH=/opt/lib/x86_64-linux-gnu/pkgconfig/:/opt/lib/pkgconfig/
#     LD_LIBRARY_PATH=/opt/lib/:/opt/lib/x86_64-linux-gnu/

# COPY --from=builder /opt/ /opt/

# # Run Janus as entrypoint process
# # ENTRYPOINT ["/opt/janus/bin/janus"]
# ENTRYPOINT ["sleep", "infinity"]
