# Use lightweight alpine image as base image to build the server and the worker
FROM python:3 AS builder

# Copy the repository to build
WORKDIR /home/root/installation

COPY ["workspace.tgz",\
      "/home/root/installation/"]

RUN mkdir -p webrtc_build \
    && tar -zxvf workspace.tgz -C webrtc_build \
    && cp webrtc_build/requirements.txt /home/root/installation \
    && cd webrtc_build/webrtc_server/janus/build/ && ./build_janus.sh \
    && cd /home/root/installation/webrtc_build/webrtc_server/janus/build/ && ./copy_janus_libs.sh

RUN pip3 install --no-cache-dir -r requirements.txt -t ./packages/

RUN cd /home/root/installation/ \
    && rm *.tgz


#FROM cgr.dev/chainguard/python:latest
#Use below image for dev debugging
FROM python:3
ARG WORKDIR=/home/root/installation
# Chain guard images run at non root user level which does not have any write access 
# This tool is required to write the scanner's result to a file mounted from host. 
# Hence the below user 
USER 0
WORKDIR $WORKDIR
COPY --from=builder /opt/janus /opt/janus/
COPY --from=builder /home/root/installation/webrtc_build/webrtc_server/ $WORKDIR/webrtc_server
COPY --from=builder /home/root/installation/webrtc_build/config_discovery/ $WORKDIR/config_discovery
COPY --from=builder /home/root/installation/webrtc_build/docker/entrypoint.py $WORKDIR/entrypoint.py
COPY --from=builder $WORKDIR/packages/ $WORKDIR/
#COPY --from=builder /lib/x86_64-linux-gnu/* /lib/x86_64-linux-gnu/
COPY --from=builder /tmp/janus/* /lib/x86_64-linux-gnu/
COPY --from=builder /lib/libsrtp2.so.1 /lib/


# Set PYTHONPATH to include the packages directory
ENV PYTHONPATH $WORKDIR

ENTRYPOINT ["python3","/home/root/installation/entrypoint.py"]
